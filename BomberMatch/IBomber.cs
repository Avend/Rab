namespace BomberMatch
{
	public interface IBomber
	{
		/// <summary>
		/// Кличка бомбометателя.
		/// </summary>
		string Name { get; }

		/// <summary>
		/// Вызывается один раз перед началом матча. Задает правила игры.
		/// </summary>
		/// <param name="matchActionsNumber">Максимальное число ходов в игре, после которого она будет завершена с ничейным результатом.</param>
		/// <param name="detonationRadius">Радиус поражения бомб. Бомба взорывает все (участников и другие бомбы) в клетках, отстоящих от нее по горизонтали и вертикали вплоть до этой величины.</param>
		/// <param name="timeToDetonate">Число ходов, через которые будут взрываться бомбы.</param>
		void SetRules(int matchActionsNumber, int detonationRadius, int timeToDetonate);

		/// <summary>
		/// Сделать ход.
		/// </summary>
		/// 
		/// <param name="arena">
		/// Двумерный массив, описывающий текущее вид поля боя.
		///	Ячейки могут принимать следующие значения:
		///		-1: стена - сюда нельзя передвинуться, останавливает распространение взрывной волны;
		///		 0: свободная ячейка - можно свободно перемещаться;
		///		 1: ячейка с бомбой*, которая взорвется через 1 ход - сюда нельзя перемещаться;
		///		 2: ячейка с бомбой*, которая взорвется через 2 хода - сюда нельзя перемещаться;
		///		 ...
		///		 N: ячейка с бомбой*, которая взорвется через N ходов - сюда нельзя перемещаться;
		///	* - в ячейки с бомбой нельзя перемещаться, но в них можно оказаться, если поставить бомбу и не двигаться или передвинуться в ячейку, в которую противник установил бомбу в этот же ход.
		///	Пример:
		///		0  0  0  0  4
		///		0 -1  0 -1  0
		///		0  0  0  0  0
		///		0 -1  0 -1  0
		///		2  0  0  0  0
		///	Поле с четырьмя симметричными стенами. Бомба в правом верхнем углу взорвется через четыре хода, в левом нижнем - через два.
		/// </param>
		/// 
		/// <param name="bombers">
		/// Позиции бомбометателей на поле. Таблица размерности Nx2, где N - количество игроков. Первое число - индекс строки на поле, второе - индекс столбца. Нумерация производится от нуля.
		/// В первой строке всегда находится позиция игрока, в последующих - позиции соперников.
		/// Пример (используется поле, описанное выше):
		///		0  3		- игрок находится в ячейке слева от бомбы;
		///		4  4		- первый соперник находится в правом нижнем углу;
		///		2  1		- второй соперник находится во второй (центральной) строке и первом столбце (второй слева) - между двух стен.
		/// </param>
		/// 
		/// <param name="availableMoves">
		/// Список возможных на текущий ход перемещений. Если в списке присутствует одно из данных чисел, значит такое перемещение возможно:
		///		0 - не перемещаться;
		///		1 - вверх;
		///		2 - вниз;
		///		3 - влево;
		///		4 - вправо.
		///	Пример:
		///		[1, 2]		- на данный ход игроку доступно перемещение вверх и вниз. Это означет, что слева и справа от него находится стена или бомба, или поле заканчивается.
		/// </param>
		/// 
		/// <returns>
		/// Для выполнения хода нужно вернуть число, соответсвующее одному из доступных кодов перемещения. Если перемещение не требуется, то следует вернуть 0.
		/// Для установки бобмы к выбранному числу нужно прибавить 10. В таком случае бомба будет установлена в текущей ячейке, после чего произойдет перемещение игрока в выбранном направлении.
		/// Примеры:
		///		1	- переместиться вверх;
		///		3	- переместиться влево;
		///		11	- установить бомбу в текущей ячейке, затем переместиться вверх;
		///		13	- установить бомбу в текущей ячейке, затем переместиться влево;
		///		0	- ничего не делать;
		///		10	- установить бомбу в текущей ячейке и остаться стоять в ней же.
		/// </returns>
		int Go(int[,] arena, int[,] bombers, int[] availableMoves);
	}
}